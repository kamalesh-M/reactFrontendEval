{"ast":null,"code":"import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","map":{"version":3,"names":["toInteger","toDate","setUTCDay","dirtyDate","dirtyDay","dirtyOptions","arguments","length","TypeError","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","date","day","currentDay","getUTCDay","remainder","dayIndex","diff","setUTCDate","getUTCDate"],"sources":["C:/Users/Kamalesh M/Desktop/reactclient/frontend/node_modules/date-fns/esm/_lib/setUTCDay/index.js"],"sourcesContent":["import toInteger from '../toInteger/index.js'\nimport toDate from '../../toDate/index.js'\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError(\n      '2 arguments required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var options = dirtyOptions || {}\n  var locale = options.locale\n  var localeWeekStartsOn =\n    locale && locale.options && locale.options.weekStartsOn\n  var defaultWeekStartsOn =\n    localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn)\n  var weekStartsOn =\n    options.weekStartsOn == null\n      ? defaultWeekStartsOn\n      : toInteger(options.weekStartsOn)\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively')\n  }\n\n  var date = toDate(dirtyDate)\n  var day = toInteger(dirtyDay)\n\n  var currentDay = date.getUTCDay()\n\n  var remainder = day % 7\n  var dayIndex = (remainder + 7) % 7\n\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay\n\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,MAAM,MAAM,uBAAuB;;AAE1C;AACA;AACA,eAAe,SAASC,SAAS,CAACC,SAAS,EAAEC,QAAQ,EAAEC,YAAY,EAAE;EACnE,IAAIC,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;IACxB,MAAM,IAAIC,SAAS,CACjB,iCAAiC,GAAGF,SAAS,CAACC,MAAM,GAAG,UAAU,CAClE;EACH;EAEA,IAAIE,OAAO,GAAGJ,YAAY,IAAI,CAAC,CAAC;EAChC,IAAIK,MAAM,GAAGD,OAAO,CAACC,MAAM;EAC3B,IAAIC,kBAAkB,GACpBD,MAAM,IAAIA,MAAM,CAACD,OAAO,IAAIC,MAAM,CAACD,OAAO,CAACG,YAAY;EACzD,IAAIC,mBAAmB,GACrBF,kBAAkB,IAAI,IAAI,GAAG,CAAC,GAAGX,SAAS,CAACW,kBAAkB,CAAC;EAChE,IAAIC,YAAY,GACdH,OAAO,CAACG,YAAY,IAAI,IAAI,GACxBC,mBAAmB,GACnBb,SAAS,CAACS,OAAO,CAACG,YAAY,CAAC;;EAErC;EACA,IAAI,EAAEA,YAAY,IAAI,CAAC,IAAIA,YAAY,IAAI,CAAC,CAAC,EAAE;IAC7C,MAAM,IAAIE,UAAU,CAAC,kDAAkD,CAAC;EAC1E;EAEA,IAAIC,IAAI,GAAGd,MAAM,CAACE,SAAS,CAAC;EAC5B,IAAIa,GAAG,GAAGhB,SAAS,CAACI,QAAQ,CAAC;EAE7B,IAAIa,UAAU,GAAGF,IAAI,CAACG,SAAS,EAAE;EAEjC,IAAIC,SAAS,GAAGH,GAAG,GAAG,CAAC;EACvB,IAAII,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAC,IAAI,CAAC;EAElC,IAAIE,IAAI,GAAG,CAACD,QAAQ,GAAGR,YAAY,GAAG,CAAC,GAAG,CAAC,IAAII,GAAG,GAAGC,UAAU;EAE/DF,IAAI,CAACO,UAAU,CAACP,IAAI,CAACQ,UAAU,EAAE,GAAGF,IAAI,CAAC;EACzC,OAAON,IAAI;AACb"},"metadata":{},"sourceType":"module"}