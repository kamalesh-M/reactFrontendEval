{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Clock from './Clock';\nimport ClockType from '../../constants/ClockType';\nimport { useUtils } from '../../_shared/hooks/useUtils';\nimport { getHourNumbers, getMinutesNumbers } from './ClockNumbers';\nimport { convertToMeridiem, getMeridiem } from '../../_helpers/time-utils';\nexport var ClockView = function ClockView(_ref) {\n  var type = _ref.type,\n    onHourChange = _ref.onHourChange,\n    onMinutesChange = _ref.onMinutesChange,\n    onSecondsChange = _ref.onSecondsChange,\n    ampm = _ref.ampm,\n    date = _ref.date,\n    minutesStep = _ref.minutesStep;\n  var utils = useUtils();\n  var viewProps = React.useMemo(function () {\n    switch (type) {\n      case ClockType.HOURS:\n        return {\n          value: utils.getHours(date),\n          children: getHourNumbers({\n            date: date,\n            utils: utils,\n            ampm: Boolean(ampm)\n          }),\n          onChange: function onChange(value, isFinish) {\n            var currentMeridiem = getMeridiem(date, utils);\n            var updatedTimeWithMeridiem = convertToMeridiem(utils.setHours(date, value), currentMeridiem, Boolean(ampm), utils);\n            onHourChange(updatedTimeWithMeridiem, isFinish);\n          }\n        };\n      case ClockType.MINUTES:\n        var minutesValue = utils.getMinutes(date);\n        return {\n          value: minutesValue,\n          children: getMinutesNumbers({\n            value: minutesValue,\n            utils: utils\n          }),\n          onChange: function onChange(value, isFinish) {\n            var updatedTime = utils.setMinutes(date, value);\n            onMinutesChange(updatedTime, isFinish);\n          }\n        };\n      case ClockType.SECONDS:\n        var secondsValue = utils.getSeconds(date);\n        return {\n          value: secondsValue,\n          children: getMinutesNumbers({\n            value: secondsValue,\n            utils: utils\n          }),\n          onChange: function onChange(value, isFinish) {\n            var updatedTime = utils.setSeconds(date, value);\n            onSecondsChange(updatedTime, isFinish);\n          }\n        };\n      default:\n        throw new Error('You must provide the type for TimePickerView');\n    }\n  }, [ampm, date, onHourChange, onMinutesChange, onSecondsChange, type, utils]);\n  return React.createElement(Clock, _extends({\n    type: type,\n    ampm: ampm,\n    minutesStep: minutesStep\n  }, viewProps));\n};\nClockView.displayName = 'TimePickerView';\nprocess.env.NODE_ENV !== \"production\" ? ClockView.propTypes = {\n  date: PropTypes.object.isRequired,\n  onHourChange: PropTypes.func.isRequired,\n  onMinutesChange: PropTypes.func.isRequired,\n  onSecondsChange: PropTypes.func.isRequired,\n  ampm: PropTypes.bool,\n  minutesStep: PropTypes.number,\n  type: PropTypes.oneOf(Object.keys(ClockType).map(function (key) {\n    return ClockType[key];\n  })).isRequired\n} : void 0;\nClockView.defaultProps = {\n  ampm: true,\n  minutesStep: 1\n};\nexport default React.memo(ClockView);","map":{"version":3,"names":["_extends","React","PropTypes","Clock","ClockType","useUtils","getHourNumbers","getMinutesNumbers","convertToMeridiem","getMeridiem","ClockView","_ref","type","onHourChange","onMinutesChange","onSecondsChange","ampm","date","minutesStep","utils","viewProps","useMemo","HOURS","value","getHours","children","Boolean","onChange","isFinish","currentMeridiem","updatedTimeWithMeridiem","setHours","MINUTES","minutesValue","getMinutes","updatedTime","setMinutes","SECONDS","secondsValue","getSeconds","setSeconds","Error","createElement","displayName","process","env","NODE_ENV","propTypes","object","isRequired","func","bool","number","oneOf","Object","keys","map","key","defaultProps","memo"],"sources":["C:/Users/Kamalesh M/Desktop/reactclient/frontend/node_modules/@material-ui/pickers/esm/views/Clock/ClockView.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Clock from './Clock';\nimport ClockType from '../../constants/ClockType';\nimport { useUtils } from '../../_shared/hooks/useUtils';\nimport { getHourNumbers, getMinutesNumbers } from './ClockNumbers';\nimport { convertToMeridiem, getMeridiem } from '../../_helpers/time-utils';\nexport var ClockView = function ClockView(_ref) {\n  var type = _ref.type,\n      onHourChange = _ref.onHourChange,\n      onMinutesChange = _ref.onMinutesChange,\n      onSecondsChange = _ref.onSecondsChange,\n      ampm = _ref.ampm,\n      date = _ref.date,\n      minutesStep = _ref.minutesStep;\n  var utils = useUtils();\n  var viewProps = React.useMemo(function () {\n    switch (type) {\n      case ClockType.HOURS:\n        return {\n          value: utils.getHours(date),\n          children: getHourNumbers({\n            date: date,\n            utils: utils,\n            ampm: Boolean(ampm)\n          }),\n          onChange: function onChange(value, isFinish) {\n            var currentMeridiem = getMeridiem(date, utils);\n            var updatedTimeWithMeridiem = convertToMeridiem(utils.setHours(date, value), currentMeridiem, Boolean(ampm), utils);\n            onHourChange(updatedTimeWithMeridiem, isFinish);\n          }\n        };\n\n      case ClockType.MINUTES:\n        var minutesValue = utils.getMinutes(date);\n        return {\n          value: minutesValue,\n          children: getMinutesNumbers({\n            value: minutesValue,\n            utils: utils\n          }),\n          onChange: function onChange(value, isFinish) {\n            var updatedTime = utils.setMinutes(date, value);\n            onMinutesChange(updatedTime, isFinish);\n          }\n        };\n\n      case ClockType.SECONDS:\n        var secondsValue = utils.getSeconds(date);\n        return {\n          value: secondsValue,\n          children: getMinutesNumbers({\n            value: secondsValue,\n            utils: utils\n          }),\n          onChange: function onChange(value, isFinish) {\n            var updatedTime = utils.setSeconds(date, value);\n            onSecondsChange(updatedTime, isFinish);\n          }\n        };\n\n      default:\n        throw new Error('You must provide the type for TimePickerView');\n    }\n  }, [ampm, date, onHourChange, onMinutesChange, onSecondsChange, type, utils]);\n  return React.createElement(Clock, _extends({\n    type: type,\n    ampm: ampm,\n    minutesStep: minutesStep\n  }, viewProps));\n};\nClockView.displayName = 'TimePickerView';\nprocess.env.NODE_ENV !== \"production\" ? ClockView.propTypes = {\n  date: PropTypes.object.isRequired,\n  onHourChange: PropTypes.func.isRequired,\n  onMinutesChange: PropTypes.func.isRequired,\n  onSecondsChange: PropTypes.func.isRequired,\n  ampm: PropTypes.bool,\n  minutesStep: PropTypes.number,\n  type: PropTypes.oneOf(Object.keys(ClockType).map(function (key) {\n    return ClockType[key];\n  })).isRequired\n} : void 0;\nClockView.defaultProps = {\n  ampm: true,\n  minutesStep: 1\n};\nexport default React.memo(ClockView);"],"mappings":"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"},"metadata":{},"sourceType":"module"}