{"ast":null,"code":"import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, numberOfDigits);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, dirtyDelimiter);\n}\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\nexport default formatters;","map":{"version":3,"names":["lightFormatters","getUTCDayOfYear","getUTCISOWeek","getUTCISOWeekYear","getUTCWeek","getUTCWeekYear","addLeadingZeros","dayPeriodEnum","am","pm","midnight","noon","morning","afternoon","evening","night","formatters","G","date","token","localize","era","getUTCFullYear","width","y","signedYear","year","ordinalNumber","unit","Y","options","signedWeekYear","weekYear","twoDigitYear","length","R","isoWeekYear","u","Q","quarter","Math","ceil","getUTCMonth","String","context","q","M","month","L","w","week","I","isoWeek","d","getUTCDate","D","dayOfYear","E","dayOfWeek","getUTCDay","day","e","localDayOfWeek","weekStartsOn","c","i","isoDayOfWeek","a","hours","getUTCHours","dayPeriodEnumValue","dayPeriod","b","B","h","H","K","k","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","floor","pow","X","_localize","originalDate","_originalDate","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","timestamp","getTime","T","offset","dirtyDelimiter","sign","absOffset","abs","minutes","delimiter"],"sources":["C:/Users/Kamalesh M/Desktop/reactclient/frontend/node_modules/date-fns/esm/_lib/format/formatters/index.js"],"sourcesContent":["import lightFormatters from '../lightFormatters/index.js'\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js'\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js'\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js'\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js'\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js'\nimport addLeadingZeros from '../../addLeadingZeros/index.js'\n\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n}\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, { width: 'abbreviated' })\n      // A, B\n      case 'GGGGG':\n        return localize.era(era, { width: 'narrow' })\n      // Anno Domini, Before Christ\n      case 'GGGG':\n      default:\n        return localize.era(era, { width: 'wide' })\n    }\n  },\n\n  // Year\n  y: function(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear()\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      var year = signedYear > 0 ? signedYear : 1 - signedYear\n      return localize.ordinalNumber(year, { unit: 'year' })\n    }\n\n    return lightFormatters.y(date, token)\n  },\n\n  // Local week-numbering year\n  Y: function(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options)\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear\n\n    // Two digit year\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100\n      return addLeadingZeros(twoDigitYear, 2)\n    }\n\n    // Ordinal number\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, { unit: 'year' })\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length)\n  },\n\n  // ISO week-numbering year\n  R: function(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date)\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length)\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function(date, token) {\n    var year = date.getUTCFullYear()\n    return addLeadingZeros(year, token.length)\n  },\n\n  // Quarter\n  Q: function(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3)\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter)\n      // 01, 02, 03, 04\n      case 'QQ':\n        return addLeadingZeros(quarter, 2)\n      // 1st, 2nd, 3rd, 4th\n      case 'Qo':\n        return localize.ordinalNumber(quarter, { unit: 'quarter' })\n      // Q1, Q2, Q3, Q4\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      // 1st quarter, 2nd quarter, ...\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        })\n    }\n  },\n\n  // Stand-alone quarter\n  q: function(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3)\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter)\n      // 01, 02, 03, 04\n      case 'qq':\n        return addLeadingZeros(quarter, 2)\n      // 1st, 2nd, 3rd, 4th\n      case 'qo':\n        return localize.ordinalNumber(quarter, { unit: 'quarter' })\n      // Q1, Q2, Q3, Q4\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        })\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        })\n      // 1st quarter, 2nd quarter, ...\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        })\n    }\n  },\n\n  // Month\n  M: function(date, token, localize) {\n    var month = date.getUTCMonth()\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token)\n      // 1st, 2nd, ..., 12th\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, { unit: 'month' })\n      // Jan, Feb, ..., Dec\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      // J, F, ..., D\n      case 'MMMMM':\n        return localize.month(month, { width: 'narrow', context: 'formatting' })\n      // January, February, ..., December\n      case 'MMMM':\n      default:\n        return localize.month(month, { width: 'wide', context: 'formatting' })\n    }\n  },\n\n  // Stand-alone month\n  L: function(date, token, localize) {\n    var month = date.getUTCMonth()\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1)\n      // 01, 02, ..., 12\n      case 'LL':\n        return addLeadingZeros(month + 1, 2)\n      // 1st, 2nd, ..., 12th\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, { unit: 'month' })\n      // Jan, Feb, ..., Dec\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        })\n      // J, F, ..., D\n      case 'LLLLL':\n        return localize.month(month, { width: 'narrow', context: 'standalone' })\n      // January, February, ..., December\n      case 'LLLL':\n      default:\n        return localize.month(month, { width: 'wide', context: 'standalone' })\n    }\n  },\n\n  // Local week of year\n  w: function(date, token, localize, options) {\n    var week = getUTCWeek(date, options)\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, { unit: 'week' })\n    }\n\n    return addLeadingZeros(week, token.length)\n  },\n\n  // ISO week of year\n  I: function(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date)\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, { unit: 'week' })\n    }\n\n    return addLeadingZeros(isoWeek, token.length)\n  },\n\n  // Day of the month\n  d: function(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), { unit: 'date' })\n    }\n\n    return lightFormatters.d(date, token)\n  },\n\n  // Day of year\n  D: function(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date)\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, { unit: 'dayOfYear' })\n    }\n\n    return addLeadingZeros(dayOfYear, token.length)\n  },\n\n  // Day of week\n  E: function(date, token, localize) {\n    var dayOfWeek = date.getUTCDay()\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      // T\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      // Tu\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        })\n      // Tuesday\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'formatting' })\n    }\n  },\n\n  // Local day of week\n  e: function(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay()\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek)\n      // Padded numerical value\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2)\n      // 1st, 2nd, ..., 7th\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, { unit: 'day' })\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      // T\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      // Tu\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        })\n      // Tuesday\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'formatting' })\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay()\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek)\n      // Padded numerical value\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length)\n      // 1st, 2nd, ..., 7th\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, { unit: 'day' })\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        })\n      // T\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        })\n      // Tu\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        })\n      // Tuesday\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'standalone' })\n    }\n  },\n\n  // ISO day of week\n  i: function(date, token, localize) {\n    var dayOfWeek = date.getUTCDay()\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek)\n      // 02\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length)\n      // 2nd\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, { unit: 'day' })\n      // Tue\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      // T\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      // Tu\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        })\n      // Tuesday\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'formatting' })\n    }\n  },\n\n  // AM or PM\n  a: function(date, token, localize) {\n    var hours = date.getUTCHours()\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am'\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        })\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function(date, token, localize) {\n    var hours = date.getUTCHours()\n    var dayPeriodEnumValue\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am'\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        })\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function(date, token, localize) {\n    var hours = date.getUTCHours()\n    var dayPeriodEnumValue\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        })\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        })\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        })\n    }\n  },\n\n  // Hour [1-12]\n  h: function(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12\n      if (hours === 0) hours = 12\n      return localize.ordinalNumber(hours, { unit: 'hour' })\n    }\n\n    return lightFormatters.h(date, token)\n  },\n\n  // Hour [0-23]\n  H: function(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), { unit: 'hour' })\n    }\n\n    return lightFormatters.H(date, token)\n  },\n\n  // Hour [0-11]\n  K: function(date, token, localize) {\n    var hours = date.getUTCHours() % 12\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, { unit: 'hour' })\n    }\n\n    return addLeadingZeros(hours, token.length)\n  },\n\n  // Hour [1-24]\n  k: function(date, token, localize) {\n    var hours = date.getUTCHours()\n    if (hours === 0) hours = 24\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, { unit: 'hour' })\n    }\n\n    return addLeadingZeros(hours, token.length)\n  },\n\n  // Minute\n  m: function(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), { unit: 'minute' })\n    }\n\n    return lightFormatters.m(date, token)\n  },\n\n  // Second\n  s: function(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), { unit: 'second' })\n    }\n\n    return lightFormatters.s(date, token)\n  },\n\n  // Fraction of second\n  S: function(date, token) {\n    var numberOfDigits = token.length\n    var milliseconds = date.getUTCMilliseconds()\n    var fractionalSeconds = Math.floor(\n      milliseconds * Math.pow(10, numberOfDigits - 3)\n    )\n    return addLeadingZeros(fractionalSeconds, numberOfDigits)\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timezoneOffset = originalDate.getTimezoneOffset()\n\n    if (timezoneOffset === 0) {\n      return 'Z'\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset)\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX': // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset)\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timezoneOffset = originalDate.getTimezoneOffset()\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset)\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx': // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset)\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (GMT)\n  O: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timezoneOffset = originalDate.getTimezoneOffset()\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':')\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timezoneOffset = originalDate.getTimezoneOffset()\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':')\n      // Long\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Seconds timestamp\n  t: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timestamp = Math.floor(originalDate.getTime() / 1000)\n    return addLeadingZeros(timestamp, token.length)\n  },\n\n  // Milliseconds timestamp\n  T: function(date, token, _localize, options) {\n    var originalDate = options._originalDate || date\n    var timestamp = originalDate.getTime()\n    return addLeadingZeros(timestamp, token.length)\n  }\n}\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = Math.floor(absOffset / 60)\n  var minutes = absOffset % 60\n  if (minutes === 0) {\n    return sign + String(hours)\n  }\n  var delimiter = dirtyDelimiter || ''\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2)\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+'\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2)\n  }\n  return formatTimezone(offset, dirtyDelimiter)\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || ''\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2)\n  var minutes = addLeadingZeros(absOffset % 60, 2)\n  return sign + hours + delimiter + minutes\n}\n\nexport default formatters\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}