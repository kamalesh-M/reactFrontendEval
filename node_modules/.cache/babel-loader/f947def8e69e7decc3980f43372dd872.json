{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kamalesh M\\\\Desktop\\\\reactclient\\\\frontend\\\\src\\\\components\\\\signup.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SingUp() {\n  _s();\n  const userEMail = useRef();\n  const userPassWord = useRef();\n  const userConfirmPassword = useRef();\n  const userName = useRef();\n  function SignUpAuth(e) {\n    console.log(\"clicked\");\n    const email = userEMail.current.value;\n    const username = userName.current.value;\n    const pass1 = userPassWord.current.value;\n    const pass2 = userConfirmPassword.current.value;\n    var emailFlag = false;\n    var passwordConditionFlag = false;\n    var passwordMatchingFlag = false;\n    var lowerCaseLetters = /[a-z]/g;\n    var upperCaseLetters = /[A-Z]/g;\n    var numbers = /[0-9]/g;\n    // eslint-disable-next-line\n    var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (email.match(mailformat)) {\n      emailFlag = true;\n    } else {\n      emailFlag = false;\n    }\n    if (pass1 === pass2) {\n      passwordMatchingFlag = true;\n      if (pass1.length > 8 && pass1.match(lowerCaseLetters) && pass1.match(upperCaseLetters) && pass1.match(numbers)) {\n        passwordConditionFlag = true;\n      } else {\n        passwordConditionFlag = false;\n      }\n    } else {\n      passwordMatchingFlag = false;\n    }\n    if (emailFlag && passwordConditionFlag && passwordMatchingFlag) {\n      fetch(\"http://localhost:8000/user/signUp\", {\n        // Adding method type\n        method: \"POST\",\n        // Adding body or contents to send\n        body: JSON.stringify({\n          email: email,\n          password: pass1,\n          username: username\n        }),\n        // Adding headers to the request\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(response => response.json()).then(json => console.log(json));\n    } else {\n      console.log(\"validation failed\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello SInupg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: userEMail,\n      className: \"email\",\n      placeholder: \"Enter the email\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: userName,\n      className: \"email\",\n      placeholder: \"Enter the userName\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: userPassWord,\n      className: \"password\",\n      placeholder: \"Enter the password\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: userConfirmPassword,\n      className: \"confirmPassword\",\n      placeholder: \"Enter the password\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"AddTaskButton\",\n      onClick: SignUpAuth,\n      children: \" Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(SingUp, \"cuC1lZiwLkjKEbgGmkTaXA54IUk=\");\n_c = SingUp;\nexport default SingUp;\nvar _c;\n$RefreshReg$(_c, \"SingUp\");","map":{"version":3,"names":["React","useRef","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","SingUp","userEMail","userPassWord","userConfirmPassword","userName","SignUpAuth","e","console","log","email","current","value","username","pass1","pass2","emailFlag","passwordConditionFlag","passwordMatchingFlag","lowerCaseLetters","upperCaseLetters","numbers","mailformat","match","length","fetch","method","body","JSON","stringify","password","headers","then","response","json"],"sources":["C:/Users/Kamalesh M/Desktop/reactclient/frontend/src/components/signup.js"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nfunction SingUp() {\r\n    const userEMail = useRef()\r\n    const userPassWord = useRef()\r\n    const userConfirmPassword = useRef()\r\n    const userName = useRef()\r\n    function SignUpAuth(e){\r\n      console.log(\"clicked\")\r\n        const email= userEMail.current.value\r\n        const username= userName.current.value\r\n        const pass1 = userPassWord.current.value\r\n        const pass2 = userConfirmPassword.current.value\r\n        var emailFlag = false\r\n        var passwordConditionFlag = false\r\n        var passwordMatchingFlag = false\r\n        var lowerCaseLetters = /[a-z]/g;\r\n        var upperCaseLetters = /[A-Z]/g;\r\n        var numbers = /[0-9]/g;\r\n        // eslint-disable-next-line\r\n        var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if(email.match(mailformat))\r\n        {\r\n          emailFlag=true\r\n        }\r\n        else\r\n        {\r\n         emailFlag = false\r\n        }\r\n        if(pass1 === pass2){\r\n          passwordMatchingFlag = true\r\n          if(pass1.length > 8  && pass1.match(lowerCaseLetters) && pass1.match(upperCaseLetters) && pass1.match(numbers)){\r\n            passwordConditionFlag = true\r\n          }\r\n          else{\r\n            passwordConditionFlag = false\r\n          }\r\n        }\r\n        else{\r\n          passwordMatchingFlag = false\r\n        }\r\n        if(emailFlag && passwordConditionFlag && passwordMatchingFlag){\r\n          fetch(\"http://localhost:8000/user/signUp\", {   \r\n              // Adding method type\r\n              method: \"POST\",\r\n              // Adding body or contents to send\r\n              body: JSON.stringify({\r\n                  email: email,\r\n                  password: pass1,\r\n                  username: username\r\n              }),\r\n              // Adding headers to the request\r\n              headers: {\r\n                  \"Content-type\": \"application/json; charset=UTF-8\"\r\n              }\r\n          })\r\n          .then(response => response.json())\r\n          .then(json => console.log(json));\r\n        }else{\r\n          console.log(\"validation failed\")\r\n        }\r\n    }\r\n  return (\r\n    <div>\r\n      <h1>hello SInupg\r\n      </h1>\r\n      <input ref={userEMail} className=\"email\" placeholder=\"Enter the email\" type=\"text\" ></input>\r\n      <br></br>\r\n      <input ref={userName} className=\"email\" placeholder=\"Enter the userName\" type=\"text\" ></input>\r\n      <br></br>\r\n      <input ref={userPassWord} className=\"password\" placeholder=\"Enter the password\" type=\"text\" ></input>\r\n      <hr></hr>\r\n      <input ref={userConfirmPassword} className=\"confirmPassword\" placeholder=\"Enter the password\" type=\"text\" ></input>\r\n      <hr></hr>\r\n      <button className='AddTaskButton' onClick={SignUpAuth}> Add Task</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingUp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AAAC;AAClE,SAASC,MAAM,GAAG;EAAA;EACd,MAAMC,SAAS,GAAGhB,MAAM,EAAE;EAC1B,MAAMiB,YAAY,GAAGjB,MAAM,EAAE;EAC7B,MAAMkB,mBAAmB,GAAGlB,MAAM,EAAE;EACpC,MAAMmB,QAAQ,GAAGnB,MAAM,EAAE;EACzB,SAASoB,UAAU,CAACC,CAAC,EAAC;IACpBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACpB,MAAMC,KAAK,GAAER,SAAS,CAACS,OAAO,CAACC,KAAK;IACpC,MAAMC,QAAQ,GAAER,QAAQ,CAACM,OAAO,CAACC,KAAK;IACtC,MAAME,KAAK,GAAGX,YAAY,CAACQ,OAAO,CAACC,KAAK;IACxC,MAAMG,KAAK,GAAGX,mBAAmB,CAACO,OAAO,CAACC,KAAK;IAC/C,IAAII,SAAS,GAAG,KAAK;IACrB,IAAIC,qBAAqB,GAAG,KAAK;IACjC,IAAIC,oBAAoB,GAAG,KAAK;IAChC,IAAIC,gBAAgB,GAAG,QAAQ;IAC/B,IAAIC,gBAAgB,GAAG,QAAQ;IAC/B,IAAIC,OAAO,GAAG,QAAQ;IACtB;IACA,IAAIC,UAAU,GAAG,+CAA+C;IAChE,IAAGZ,KAAK,CAACa,KAAK,CAACD,UAAU,CAAC,EAC1B;MACEN,SAAS,GAAC,IAAI;IAChB,CAAC,MAED;MACCA,SAAS,GAAG,KAAK;IAClB;IACA,IAAGF,KAAK,KAAKC,KAAK,EAAC;MACjBG,oBAAoB,GAAG,IAAI;MAC3B,IAAGJ,KAAK,CAACU,MAAM,GAAG,CAAC,IAAKV,KAAK,CAACS,KAAK,CAACJ,gBAAgB,CAAC,IAAIL,KAAK,CAACS,KAAK,CAACH,gBAAgB,CAAC,IAAIN,KAAK,CAACS,KAAK,CAACF,OAAO,CAAC,EAAC;QAC7GJ,qBAAqB,GAAG,IAAI;MAC9B,CAAC,MACG;QACFA,qBAAqB,GAAG,KAAK;MAC/B;IACF,CAAC,MACG;MACFC,oBAAoB,GAAG,KAAK;IAC9B;IACA,IAAGF,SAAS,IAAIC,qBAAqB,IAAIC,oBAAoB,EAAC;MAC5DO,KAAK,CAAC,mCAAmC,EAAE;QACvC;QACAC,MAAM,EAAE,MAAM;QACd;QACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBnB,KAAK,EAAEA,KAAK;UACZoB,QAAQ,EAAEhB,KAAK;UACfD,QAAQ,EAAEA;QACd,CAAC,CAAC;QACF;QACAkB,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAI1B,OAAO,CAACC,GAAG,CAACyB,IAAI,CAAC,CAAC;IAClC,CAAC,MAAI;MACH1B,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAClC;EACJ;EACF,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QACK,eACL;MAAO,GAAG,EAAEP,SAAU;MAAC,SAAS,EAAC,OAAO;MAAC,WAAW,EAAC,iBAAiB;MAAC,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAU,eAC5F;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAO,GAAG,EAAEG,QAAS;MAAC,SAAS,EAAC,OAAO;MAAC,WAAW,EAAC,oBAAoB;MAAC,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAU,eAC9F;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAO,GAAG,EAAEF,YAAa;MAAC,SAAS,EAAC,UAAU;MAAC,WAAW,EAAC,oBAAoB;MAAC,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAU,eACrG;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAO,GAAG,EAAEC,mBAAoB;MAAC,SAAS,EAAC,iBAAiB;MAAC,WAAW,EAAC,oBAAoB;MAAC,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAU,eACnH;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAQ,SAAS,EAAC,eAAe;MAAC,OAAO,EAAEE,UAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB;EAAA;IAAA;IAAA;IAAA;EAAA,QACrE;AAEV;AAAC,GA3EQL,MAAM;AAAA,KAANA,MAAM;AA6Ef,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}