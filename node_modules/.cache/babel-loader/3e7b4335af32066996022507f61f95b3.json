{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { arrayIncludes } from '../../_helpers/utils';\nexport function useViews(views, openTo, onChange) {\n  var _React$useState = React.useState(openTo && arrayIncludes(views, openTo) ? openTo : views[0]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    openView = _React$useState2[0],\n    setOpenView = _React$useState2[1];\n  var handleChangeAndOpenNext = React.useCallback(function (date, isFinish) {\n    var nextViewToOpen = views[views.indexOf(openView) + 1];\n    if (isFinish && nextViewToOpen) {\n      // do not close picker if needs to show next view\n      onChange(date, false);\n      setOpenView(nextViewToOpen);\n      return;\n    }\n    onChange(date, Boolean(isFinish));\n  }, [onChange, openView, views]);\n  return {\n    handleChangeAndOpenNext: handleChangeAndOpenNext,\n    openView: openView,\n    setOpenView: setOpenView\n  };\n}","map":{"version":3,"names":["_slicedToArray","React","arrayIncludes","useViews","views","openTo","onChange","_React$useState","useState","_React$useState2","openView","setOpenView","handleChangeAndOpenNext","useCallback","date","isFinish","nextViewToOpen","indexOf","Boolean"],"sources":["C:/Users/Kamalesh M/Desktop/reactclient/frontend/node_modules/@material-ui/pickers/esm/_shared/hooks/useViews.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { arrayIncludes } from '../../_helpers/utils';\nexport function useViews(views, openTo, onChange) {\n  var _React$useState = React.useState(openTo && arrayIncludes(views, openTo) ? openTo : views[0]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openView = _React$useState2[0],\n      setOpenView = _React$useState2[1];\n\n  var handleChangeAndOpenNext = React.useCallback(function (date, isFinish) {\n    var nextViewToOpen = views[views.indexOf(openView) + 1];\n\n    if (isFinish && nextViewToOpen) {\n      // do not close picker if needs to show next view\n      onChange(date, false);\n      setOpenView(nextViewToOpen);\n      return;\n    }\n\n    onChange(date, Boolean(isFinish));\n  }, [onChange, openView, views]);\n  return {\n    handleChangeAndOpenNext: handleChangeAndOpenNext,\n    openView: openView,\n    setOpenView: setOpenView\n  };\n}"],"mappings":"AAAA,OAAOA,cAAc,MAAM,0CAA0C;AACrE,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAO,SAASC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAE;EAChD,IAAIC,eAAe,GAAGN,KAAK,CAACO,QAAQ,CAACH,MAAM,IAAIH,aAAa,CAACE,KAAK,EAAEC,MAAM,CAAC,GAAGA,MAAM,GAAGD,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5FK,gBAAgB,GAAGT,cAAc,CAACO,eAAe,EAAE,CAAC,CAAC;IACrDG,QAAQ,GAAGD,gBAAgB,CAAC,CAAC,CAAC;IAC9BE,WAAW,GAAGF,gBAAgB,CAAC,CAAC,CAAC;EAErC,IAAIG,uBAAuB,GAAGX,KAAK,CAACY,WAAW,CAAC,UAAUC,IAAI,EAAEC,QAAQ,EAAE;IACxE,IAAIC,cAAc,GAAGZ,KAAK,CAACA,KAAK,CAACa,OAAO,CAACP,QAAQ,CAAC,GAAG,CAAC,CAAC;IAEvD,IAAIK,QAAQ,IAAIC,cAAc,EAAE;MAC9B;MACAV,QAAQ,CAACQ,IAAI,EAAE,KAAK,CAAC;MACrBH,WAAW,CAACK,cAAc,CAAC;MAC3B;IACF;IAEAV,QAAQ,CAACQ,IAAI,EAAEI,OAAO,CAACH,QAAQ,CAAC,CAAC;EACnC,CAAC,EAAE,CAACT,QAAQ,EAAEI,QAAQ,EAAEN,KAAK,CAAC,CAAC;EAC/B,OAAO;IACLQ,uBAAuB,EAAEA,uBAAuB;IAChDF,QAAQ,EAAEA,QAAQ;IAClBC,WAAW,EAAEA;EACf,CAAC;AACH"},"metadata":{},"sourceType":"module"}