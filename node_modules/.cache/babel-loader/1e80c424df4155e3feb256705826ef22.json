{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: []\n};\nexport const UserSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    increment: (state, action) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value = JSON.parse(JSON.stringify(action.payload));\n      console.log(\"///////////////////////////\", state.value);\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value = JSON.parse(JSON.stringify(action.payload));\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = UserSlice.actions;\nexport default UserSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","UserSlice","name","reducers","increment","state","action","value","JSON","parse","stringify","payload","console","log","decrement","incrementByAmount","actions","reducer"],"sources":["C:/Users/Kamalesh M/Desktop/reactclient/frontend/src/redux/userDetail.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  user: [],\r\n}\r\n\r\nexport const UserSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    increment: (state, action) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value = JSON.parse(JSON.stringify(action.payload));\r\n      console.log(\"///////////////////////////\",state.value)\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value = JSON.parse(JSON.stringify(action.payload));\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = UserSlice.actions\r\n\r\nexport default UserSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;EACnCI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B;MACA;MACA;MACA;MACAD,KAAK,CAACE,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACJ,MAAM,CAACK,OAAO,CAAC,CAAC;MACxDC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAACR,KAAK,CAACE,KAAK,CAAC;IACxD,CAAC;IACDO,SAAS,EAAGT,KAAK,IAAK;MACpBA,KAAK,CAACE,KAAK,IAAI,CAAC;IAClB,CAAC;IACDQ,iBAAiB,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MACpCD,KAAK,CAACE,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACJ,MAAM,CAACK,OAAO,CAAC,CAAC;IAC1D;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEP,SAAS;EAAEU,SAAS;EAAEC;AAAkB,CAAC,GAAGd,SAAS,CAACe,OAAO;AAE5E,eAAef,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module"}