{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kamalesh M\\\\Desktop\\\\reactclient\\\\frontend\\\\src\\\\components\\\\countrySelect.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { Grid, TextField } from '@material-ui/core';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport AsyncSelect from 'react-select/async';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\nfunction CountrySelect() {\n  _s();\n  const filterColors = inputValue => {\n    async function foo() {\n      let obj;\n      const res = await fetch('https://restcountries.com/v3.1/all');\n      obj = await res.json();\n      console.log(obj);\n      return obj.filter(i => i.name.toLowerCase());\n    }\n    foo();\n  };\n  const promiseOptions = inputValue => new Promise(resolve => {\n    setTimeout(() => {\n      resolve(filterColors(inputValue));\n    }, 1000);\n  });\n  var a = 0;\n  useEffect(() => {\n    var obj;\n    const options = {\n      method: 'GET'\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n      cacheOptions: true,\n      defaultOptions: true,\n      loadOptions: promiseOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(CountrySelect, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CountrySelect;\nexport default CountrySelect;\nvar _c;\n$RefreshReg$(_c, \"CountrySelect\");","map":{"version":3,"names":["React","useEffect","useState","Select","Grid","TextField","Autocomplete","AsyncSelect","options","value","label","CountrySelect","filterColors","inputValue","foo","obj","res","fetch","json","console","log","filter","i","name","toLowerCase","promiseOptions","Promise","resolve","setTimeout","a","method"],"sources":["C:/Users/Kamalesh M/Desktop/reactclient/frontend/src/components/countrySelect.js"],"sourcesContent":["import React from 'react'\r\nimport {useEffect,useState} from 'react';\r\nimport Select from 'react-select'\r\nimport { Grid, TextField } from '@material-ui/core';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport AsyncSelect from 'react-select/async';\r\nconst options = [\r\n  { value: 'chocolate', label: 'Chocolate' },\r\n  { value: 'strawberry', label: 'Strawberry' },\r\n  { value: 'vanilla', label: 'Vanilla' }\r\n]\r\n\r\nfunction CountrySelect() {\r\n    const filterColors = (inputValue) => {\r\n        async function foo() {\r\n            let obj;\r\n          \r\n            const res = await fetch('https://restcountries.com/v3.1/all')\r\n          \r\n            obj = await res.json();\r\n            console.log(obj)\r\n            return obj.filter((i) =>\r\n                i.name.toLowerCase()\r\n            );\r\n            \r\n          }\r\n          \r\n          foo();\r\n        \r\n      };\r\n      \r\n      const promiseOptions = (inputValue) =>\r\n        new Promise((resolve) => {\r\n          setTimeout(() => {\r\n            resolve(filterColors(inputValue));\r\n          }, 1000);\r\n        });\r\n    \r\n    var a = 0;\r\n    useEffect(() =>{\r\n        var obj;\r\n        const options = {\r\n            method: 'GET'\r\n        };\r\n        \r\n        \r\n    })\r\n  return (\r\n    <>\r\n    <AsyncSelect cacheOptions defaultOptions loadOptions={promiseOptions} />\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nexport default CountrySelect;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAACC,QAAQ,QAAO,OAAO;AACxC,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,IAAI,EAAEC,SAAS,QAAQ,mBAAmB;AACnD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,WAAW,MAAM,oBAAoB;AAAC;AAAA;AAC7C,MAAMC,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAY,CAAC,EAC1C;EAAED,KAAK,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAa,CAAC,EAC5C;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,CACvC;AAED,SAASC,aAAa,GAAG;EAAA;EACrB,MAAMC,YAAY,GAAIC,UAAU,IAAK;IACjC,eAAeC,GAAG,GAAG;MACjB,IAAIC,GAAG;MAEP,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;MAE7DF,GAAG,GAAG,MAAMC,GAAG,CAACE,IAAI,EAAE;MACtBC,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;MAChB,OAAOA,GAAG,CAACM,MAAM,CAAEC,CAAC,IAChBA,CAAC,CAACC,IAAI,CAACC,WAAW,EAAE,CACvB;IAEH;IAEAV,GAAG,EAAE;EAET,CAAC;EAED,MAAMW,cAAc,GAAIZ,UAAU,IAChC,IAAIa,OAAO,CAAEC,OAAO,IAAK;IACvBC,UAAU,CAAC,MAAM;MACfD,OAAO,CAACf,YAAY,CAACC,UAAU,CAAC,CAAC;IACnC,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,CAAC;EAEN,IAAIgB,CAAC,GAAG,CAAC;EACT5B,SAAS,CAAC,MAAK;IACX,IAAIc,GAAG;IACP,MAAMP,OAAO,GAAG;MACZsB,MAAM,EAAE;IACZ,CAAC;EAGL,CAAC,CAAC;EACJ,oBACE;IAAA,uBACA,QAAC,WAAW;MAAC,YAAY;MAAC,cAAc;MAAC,WAAW,EAAEL;IAAe;MAAA;MAAA;MAAA;IAAA;EAAG,iBACrE;AAGP;AAAC,GAzCQd,aAAa;AAAA,KAAbA,aAAa;AA2CtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}