{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kamalesh M\\\\Desktop\\\\reactclient\\\\frontend\\\\src\\\\components\\\\patientForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genderItems = [{\n  id: 'male',\n  title: 'Male'\n}, {\n  id: 'female',\n  title: 'Female'\n}, {\n  id: 'other',\n  title: 'Other'\n}];\nconst initialFValues = {\n  id: 0,\n  fullName: '',\n  email: '',\n  mobile: '',\n  city: '',\n  gender: 'male',\n  departmentId: '',\n  hireDate: new Date(),\n  isPermanent: false\n};\nexport default function EmployeeForm() {\n  _s();\n  const validate = function () {\n    let fieldValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : values;\n    let temp = {\n      ...errors\n    };\n    if ('fullName' in fieldValues) temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\n    if ('email' in fieldValues) temp.email = /$^|.+@.+..+/.test(fieldValues.email) ? \"\" : \"Email is not valid.\";\n    if ('mobile' in fieldValues) temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\";\n    if ('departmentId' in fieldValues) temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\";\n    setErrors({\n      ...temp\n    });\n    if (fieldValues == values) return Object.values(temp).every(x => x == \"\");\n  };\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validate()) {\n      employeeService.insertEmployee(values);\n      resetForm();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"fullName\",\n          label: \"Full Name\",\n          value: values.fullName,\n          onChange: handleInputChange,\n          error: errors.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"Email\",\n          name: \"email\",\n          value: values.email,\n          onChange: handleInputChange,\n          error: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"Mobile\",\n          name: \"mobile\",\n          value: values.mobile,\n          onChange: handleInputChange,\n          error: errors.mobile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"City\",\n          name: \"city\",\n          value: values.city,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.RadioGroup, {\n          name: \"gender\",\n          label: \"Gender\",\n          value: values.gender,\n          onChange: handleInputChange,\n          items: genderItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n          name: \"departmentId\",\n          label: \"Department\",\n          value: values.departmentId,\n          onChange: handleInputChange,\n          options: employeeService.getDepartmentCollection(),\n          error: errors.departmentId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.DatePicker, {\n          name: \"hireDate\",\n          label: \"Hire Date\",\n          value: values.hireDate,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n          name: \"isPermanent\",\n          label: \"Permanent Employee\",\n          value: values.isPermanent,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n            type: \"submit\",\n            text: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n            text: \"Reset\",\n            color: \"default\",\n            onClick: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeeForm, \"UhMxaZ+ODgYIFdMtrMHwMhICHPI=\", true);\n_c = EmployeeForm;\nvar _c;\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Controls","genderItems","id","title","initialFValues","fullName","email","mobile","city","gender","departmentId","hireDate","Date","isPermanent","EmployeeForm","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","x","setValues","handleInputChange","resetForm","useForm","handleSubmit","e","preventDefault","employeeService","insertEmployee","getDepartmentCollection"],"sources":["C:/Users/Kamalesh M/Desktop/reactclient/frontend/src/components/patientForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\n\r\n\r\nconst genderItems = [\r\n    { id: 'male', title: 'Male' },\r\n    { id: 'female', title: 'Female' },\r\n    { id: 'other', title: 'Other' },\r\n]\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    mobile: '',\r\n    city: '',\r\n    gender: 'male',\r\n    departmentId: '',\r\n    hireDate: new Date(),\r\n    isPermanent: false,\r\n}\r\n\r\nexport default function EmployeeForm() {\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n        if ('departmentId' in fieldValues)\r\n            temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()){\r\n            employeeService.insertEmployee(values)\r\n            resetForm()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Mobile\"\r\n                        name=\"mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        error={errors.mobile}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"City\"\r\n                        name=\"city\"\r\n                        value={values.city}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                    />\r\n                    <Controls.Select\r\n                        name=\"departmentId\"\r\n                        label=\"Department\"\r\n                        value={values.departmentId}\r\n                        onChange={handleInputChange}\r\n                        options={employeeService.getDepartmentCollection()}\r\n                        error={errors.departmentId}\r\n                    />\r\n                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Checkbox\r\n                        name=\"isPermanent\"\r\n                        label=\"Permanent Employee\"\r\n                        value={values.isPermanent}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}