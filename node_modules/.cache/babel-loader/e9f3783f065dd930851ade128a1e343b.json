{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kamalesh M\\\\Desktop\\\\reactclient\\\\frontend\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect } from 'react';\nimport Table from \"./patientTabel\";\nimport { populateUserDetail } from \"../redux/userDetail\";\nimport { useDispatch } from \"react-redux\";\n//import { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const {\n    user\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  //const doctorId = user.doctorId\n  useEffect(() => {\n    const data = localStorage.getItem(\"userDetails\");\n    console.log(\"***************\", data);\n    dispatch(populateUserDetail(JSON.parse(data)));\n  }, [dispatch]);\n  useEffect(() => {\n    localStorage.setItem(\"userDetails\", JSON.stringify(user));\n    fetch(\"http://localhost:8000/patient\", {\n      // Adding method type\n      method: \"GET\",\n      credentials: \"include\",\n      // Adding body or contents to send\n      headers: {\n        \"doctorId\": user.doctorId\n      }\n    }).then(response => response.json()).then(json => console.log(\"karen\", json));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"bAH10jam/3wM/9OuhKsuj8By+7s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useSelector","useEffect","Table","populateUserDetail","useDispatch","Dashboard","user","state","dispatch","data","localStorage","getItem","console","log","JSON","parse","setItem","stringify","fetch","method","credentials","headers","doctorId","then","response","json"],"sources":["C:/Users/Kamalesh M/Desktop/reactclient/frontend/src/components/dashboard.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {useEffect} from 'react';\r\nimport Table from \"./patientTabel\";\r\nimport { populateUserDetail } from \"../redux/userDetail\";\r\nimport { useDispatch } from \"react-redux\";\r\n//import { json } from \"react-router-dom\";\r\nfunction Dashboard() { \r\n    const { user } = useSelector((state) => state.user)\r\n    const dispatch = useDispatch()\r\n    //const doctorId = user.doctorId\r\n    useEffect(() => {\r\n      const data = localStorage.getItem(\"userDetails\")\r\n      console.log(\"***************\",data)\r\n      dispatch(populateUserDetail(JSON.parse(data)))\r\n      \r\n      \r\n    },[dispatch])\r\n    useEffect(() => {\r\n        localStorage.setItem(\"userDetails\",JSON.stringify(user));\r\n        fetch(\"http://localhost:8000/patient\", {   \r\n            // Adding method type\r\n            method: \"GET\",\r\n            credentials: \"include\",\r\n            // Adding body or contents to send\r\n            headers: {\r\n              \"doctorId\":user.doctorId\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => console.log(\"karen\",json));\r\n      },[]);\r\n  return (\r\n    <div>\r\n      <h1>hello Dashboard\r\n      </h1>\r\n      <div>\r\n        <Table />\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAQC,SAAS,QAAO,OAAO;AAC/B,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,kBAAkB,QAAQ,qBAAqB;AACxD,SAASC,WAAW,QAAQ,aAAa;AACzC;AAAA;AACA,SAASC,SAAS,GAAG;EAAA;EACjB,MAAM;IAAEC;EAAK,CAAC,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACD,IAAI,CAAC;EACnD,MAAME,QAAQ,GAAGJ,WAAW,EAAE;EAC9B;EACAH,SAAS,CAAC,MAAM;IACd,MAAMQ,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAChDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAACJ,IAAI,CAAC;IACnCD,QAAQ,CAACL,kBAAkB,CAACW,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,CAAC,CAAC;EAGhD,CAAC,EAAC,CAACD,QAAQ,CAAC,CAAC;EACbP,SAAS,CAAC,MAAM;IACZS,YAAY,CAACM,OAAO,CAAC,aAAa,EAACF,IAAI,CAACG,SAAS,CAACX,IAAI,CAAC,CAAC;IACxDY,KAAK,CAAC,+BAA+B,EAAE;MACnC;MACAC,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE,SAAS;MACtB;MACAC,OAAO,EAAE;QACP,UAAU,EAACf,IAAI,CAACgB;MAClB;IACJ,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAIb,OAAO,CAACC,GAAG,CAAC,OAAO,EAACY,IAAI,CAAC,CAAC;EAC1C,CAAC,EAAC,EAAE,CAAC;EACT,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QACK,eACL;MAAA,uBACE,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QAEF;AAEV;AAAC,GAnCQpB,SAAS;EAAA,QACGL,WAAW,EACXI,WAAW;AAAA;AAAA,KAFvBC,SAAS;AAqClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}