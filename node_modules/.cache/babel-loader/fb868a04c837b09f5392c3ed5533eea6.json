{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kamalesh M\\\\Desktop\\\\reactclient\\\\frontend\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from \"react-redux\";\nimport { populateUserDetail } from \"../redux/userDetail\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LogIn() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const userEMail = useRef();\n  const userPassWord = useRef();\n  async function logInAuth(e) {\n    const email = userEMail.current.value;\n    const password = userPassWord.current.value;\n    console.log(\"////////\", email, password);\n    var UserDetails = undefined;\n    await fetch(\"http://localhost:8000/login\", {\n      // Adding method type\n      method: \"POST\",\n      credentials: \"include\",\n      // Adding body or contents to send\n      body: JSON.stringify({\n        username: email,\n        password: password\n      }),\n      // Adding headers to the request\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(json => UserDetails = json);\n    if (UserDetails && UserDetails.message === \"Authenticated\") {\n      console.log(\"user details:\", UserDetails);\n      dispatch(populateUserDetail(UserDetails));\n      toast.success('Success Notification !', {\n        position: toast.POSITION.TOP_RIGHT\n      });\n      navigate('/Dashboard');\n    } else {\n      alert(\"mofo\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello Loogi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: userEMail,\n      className: \"email\",\n      placeholder: \"Enter the email\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: userPassWord,\n      className: \"password\",\n      placeholder: \"Enter the password\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"AddTaskButton\",\n      onClick: logInAuth,\n      children: \" Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(LogIn, \"laITjOvQ+NLWHdaSEXj2LzkMPOY=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = LogIn;\nexport default LogIn;\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["React","useRef","useNavigate","useDispatch","populateUserDetail","ToastContainer","toast","LogIn","dispatch","navigate","userEMail","userPassWord","logInAuth","e","email","current","value","password","console","log","UserDetails","undefined","fetch","method","credentials","body","JSON","stringify","username","headers","then","response","json","message","success","position","POSITION","TOP_RIGHT","alert"],"sources":["C:/Users/Kamalesh M/Desktop/reactclient/frontend/src/components/login.js"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { populateUserDetail } from \"../redux/userDetail\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nfunction LogIn() {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n    const userEMail = useRef()\r\n    const userPassWord = useRef()\r\n    async function logInAuth(e){\r\n        const email= userEMail.current.value\r\n        const password = userPassWord.current.value\r\n        console.log(\"////////\",email,password)\r\n        var UserDetails = undefined;\r\n        await fetch(\"http://localhost:8000/login\", {   \r\n            // Adding method type\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            // Adding body or contents to send\r\n            body: JSON.stringify({\r\n                username: email,\r\n                password: password\r\n            }),\r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => UserDetails = json);\r\n        if(UserDetails && UserDetails.message === \"Authenticated\"){\r\n          console.log(\"user details:\",UserDetails)\r\n          dispatch(populateUserDetail(UserDetails))\r\n          toast.success('Success Notification !', {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n          navigate('/Dashboard');\r\n        }\r\n        else{\r\n          alert(\"mofo\")\r\n        }\r\n    }\r\n  return (\r\n    <div>\r\n      <h1>hello Loogi\r\n      </h1>\r\n      <input ref={userEMail} className=\"email\" placeholder=\"Enter the email\" type=\"text\" ></input>\r\n      <br></br>\r\n      <input ref={userPassWord} className=\"password\" placeholder=\"Enter the password\" type=\"text\" ></input>\r\n      <hr></hr>\r\n      <button className='AddTaskButton' onClick={logInAuth}> Add Task</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,kBAAkB,QAAQ,qBAAqB;AACxD,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC;AAC/C,SAASC,KAAK,GAAG;EAAA;EACb,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAMM,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAMQ,SAAS,GAAGT,MAAM,EAAE;EAC1B,MAAMU,YAAY,GAAGV,MAAM,EAAE;EAC7B,eAAeW,SAAS,CAACC,CAAC,EAAC;IACvB,MAAMC,KAAK,GAAEJ,SAAS,CAACK,OAAO,CAACC,KAAK;IACpC,MAAMC,QAAQ,GAAGN,YAAY,CAACI,OAAO,CAACC,KAAK;IAC3CE,OAAO,CAACC,GAAG,CAAC,UAAU,EAACL,KAAK,EAACG,QAAQ,CAAC;IACtC,IAAIG,WAAW,GAAGC,SAAS;IAC3B,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MACvC;MACAC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtB;MACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAEd,KAAK;QACfG,QAAQ,EAAEA;MACd,CAAC,CAAC;MACF;MACAY,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAIZ,WAAW,GAAGY,IAAI,CAAC;IACjC,IAAGZ,WAAW,IAAIA,WAAW,CAACa,OAAO,KAAK,eAAe,EAAC;MACxDf,OAAO,CAACC,GAAG,CAAC,eAAe,EAACC,WAAW,CAAC;MACxCZ,QAAQ,CAACJ,kBAAkB,CAACgB,WAAW,CAAC,CAAC;MACzCd,KAAK,CAAC4B,OAAO,CAAC,wBAAwB,EAAE;QACtCC,QAAQ,EAAE7B,KAAK,CAAC8B,QAAQ,CAACC;MAC7B,CAAC,CAAC;MACA5B,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,MACG;MACF6B,KAAK,CAAC,MAAM,CAAC;IACf;EACJ;EACF,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QACK,eACL;MAAO,GAAG,EAAE5B,SAAU;MAAC,SAAS,EAAC,OAAO;MAAC,WAAW,EAAC,iBAAiB;MAAC,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAU,eAC5F;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAO,GAAG,EAAEC,YAAa;MAAC,SAAS,EAAC,UAAU;MAAC,WAAW,EAAC,oBAAoB;MAAC,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAU,eACrG;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAQ,SAAS,EAAC,eAAe;MAAC,OAAO,EAAEC,SAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB;EAAA;IAAA;IAAA;IAAA;EAAA,QACpE;AAEV;AAAC,GAjDQL,KAAK;EAAA,QACOJ,WAAW,EACXD,WAAW;AAAA;AAAA,KAFvBK,KAAK;AAmDd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}